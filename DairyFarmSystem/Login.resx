<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>