<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>